[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyt", { glob = ".python_history" }, { glob = ".pythonstartup" }, { glob = ".pythonrc" }, { glob = "SConstruct" }, { glob = "SConscript" }]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["pylsp", "ruff"]
auto-format = true
# TODO: pyls needs utf-8 offsets
indent = { tab-width = 4, unit = "    " }

[language-server.gpt]
command = "helix-gpt"


[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]


[language-server.pyright.config]
python.analysis.venvPath = "."
python.analysis.venv = ".venv"
python.analysis.lint = true
python.analysis.inlayHint.enable = true
python.analysis.autoSearchPaths = true
python.analysis.diagnosticMode = "workspace"
python.analysis.useLibraryCodeForType = true
python.analysis.logLevel = "Error"
python.analysis.typeCheckingMode = "on"
python.analysis.autoImoprtCompletion = true
python.analysis.reportOptionalSubscript = false
python.analysis.reportOptionalMemberAccess = false


[language-server.ruff]
command = "ruff"
args = ["server", "--preview"]
environment = { "RUFF_TRACE" = "messages" }

[language-server.ruff.config.settings]
lineLength = 120

[language-server.pylsp.config.pylsp.plugins]
flake8 = {enabled = true, ignore = ["E501", "C0116"]}
autopep8 = {enabled = false}
mccabe = {enabled = false}
pycodestyle = {enabled = true, ignore = ["E501", "C0116"]}
pyflakes = {enabled = false}
pylint = {enabled = false}
yapf = {enabled = false}
ruff = {enabled = true, ignore = ["E501", "C0116"]}
pylsp-rope = {enabled = true, ignore = ["E501", "C0116"]}
rope_autoimport = {enabled = true}

[language-server.pylyzer]
command = "pylyzer"
args = ["--server"]

[[grammar]]
name = "python"
source = { git = "https://github.com/tree-sitter/tree-sitter-python", rev = "4bfdd9033a2225cc95032ce77066b7aeca9e2efc" }

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rs|rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
comment-tokens = ["//", "///", "//!"]
formatter = { command = "rustfmt" }
auto-format = true
block-comment-tokens = [
  { start = "/*", end = "*/" },
  { start = "/**", end = "*/" },
  { start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
indent = { tab-width = 4, unit = "    " }
persistent-diagnostic-sources = ["rustc", "clippy"]

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[language.debugger]
name = "lldb-dap"
transport = "stdio"
command = "lldb-dap"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [ { name = "binary", completion = "filename" } ]
args = { program = "{0}", initCommands = [ "command script import /usr/local/etc/lldb_vscode_rustc_primer.py" ] }

[[language]]
name = "go"
auto-format = true
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
formatter = { command = "goimports" }

[[language]]
name = "templ"
auto-format = true
scope = "source.templ"
file-types = ["templ"]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-servers = [ "templ" ]
formatter = { command = "templ" , args = ["fmt", "--stdin"] }
